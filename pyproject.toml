# Poetry pyproject.toml: https://python-poetry.org/docs/pyproject

[tool.poetry]
name = "jmbde"
version = "0.2.2"
description = "A Business Data Extraction (BDE) tool"
authors = ["Jürgen Mülbert <juergen.muelbert@outlook.de>"]
license = "GPL-3.0"
readme = "README.rst"
homepage = "https://github.com/jmuelbert/jmbde-python"
repository = "https://github.com/jmuelbert/jmbde-python"
documentation = "https://jmbde-python.readthedocs.io"

# Keywords description: https://python-poetry.org/docs/pyproject/#keywords
keywords = ["jmbde", "business-data-extraction", "BDE", "database", "python-tool"]

# Pypi classifiers: https://pypi.org/classifiers/
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "Intended Audience :: End Users/Desktop",
  "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Office/Business",
]

[tool.poetry.urls]
Changelog = "https://github.com/jmuelbert/jmbde-python/releases"

[tool.poetry.dependencies]
python = ">=3.9, <4.0"
click = "^8.0"
pyside6 = "^6.0" # Updated to Qt 6.x

[tool.poetry.dev-dependencies]
coverage = { extras = ["toml"], version = "^5.3" }
pytest = "^6.1"
safety = "^1.9"
mypy = "^0.910"
typeguard = "^2.10"
xdoctest = "^0.15"
sphinx = "^4.0"
sphinx-autobuild = "^2021.3.14"
pre-commit = "^2.7"
black = "^21.5b1"
flake8 = "^3.8.3"
flake8-bandit = "^2.1"
flake8-bugbear = "^21.4"
flake8-docstrings = "^1.5"
flake8-rst-docstrings = "^0.2"
pep8-naming = "^0.12"
darglint = "^1.5"
reorder-python-imports = "^2.3"
pre-commit-hooks = "^4.0"
faker = "^8.0"
openpyxl = "^3.0"

[tool.poetry.scripts]
jmbde = "jmbde.__main__:main"

[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.coverage.run]
branch = true
source = ["jmbde"]

[tool.coverage.report]
show_missing = true
fail_under = 80 # Updated to a more ambitious threshold.

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.black]
target-version = ["py39", "py310", "py311", "py312"]
include = "\.pyi?$"
extend-exclude = """/(
    \.git|
    \.mypy_cache|
    ^lib/spack/external/|
    ^opt/
)/"""

[tool.ruff]
fix = true

[tool.ruff.format]
docstring-code-line-length = 100

[tool.ruff.lint]
select = ["ALL"]
ignore = [
  "B027", # Allow non-abstract empty methods in abstract base classes.
  "S101", # Allow `assert` usage for testing.
  "SIM105", # Suppress complex contextlib suggestions.
  "RET503", # Missing explicit return at the end of functions.
  "RET504", # Unnecessary assignments after return.
  "RET505", # Unnecessary else after return.
  "RET506", # Unnecessary elif after raise.
  "S105", "S106", # Ignore password warnings.
  "RUF012", # Ignore mutable class attribute annotations.
  "UP007", # Suppress type annotation updates for older versions.
]

[tool.ruff.per-file-ignores]
"tests/**/*.py" = [
  "S101", "FBT", "INP001", "D", "S603", "PLR2004",
]

[tool.isort]
profile = "black"
src_paths = ["src", "tests"]
honor_noqa = true

[tool.codespell]
builtin = "clear,rare,informal,usage,code,names"
write-changes = true
count = true
skip = "*.svg,pyproject.toml,LICENSE,LICENSES/*,.github/actions/*"
ignore-words-list = "master"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["-ra", "--strict-markers", "--strict-config", "--color=yes"]
xfail_strict = true
junit_family = "xunit2"
filterwarnings = ["error"]
log_cli_level = "info"
testpaths = ["tests"]
markers = [
  "save_engine: marks tests using an external package for saving charts (e.g., PNG). Run selectively in CI.",
]

[tool.mypy]
disallow_untyped_defs = true
disallow_incomplete_defs = true
follow_imports = "normal"
ignore_missing_imports = true
pretty = true
show_column_numbers = true
show_error_codes = true
strict = true
explicit_package_bases = true
namespace_packages = true
warn_no_return = true
warn_unused_ignores = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]

[[tool.mypy.overrides]]
module = ["checkconnect.*", "virtualenv.*"]
ignore_missing_imports = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
warn_no_return = true

[tool.pylint]
max-args = 12
max-branches = 20 # Reduced to encourage simpler methods.
max-returns = 6 # Lowered to improve code clarity.
max-statements = 50
