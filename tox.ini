# Tox (http://tox.testrun.org/) is a tool for running tests in
# multiple virtualenvs. To use it, "pip install tox" and then run
# "tox" from this directory.

[tox]
envlist =py{34, 35, 36,37, 38,pypy3}, lint, cov, docs, build, release
skip_missing_interpreters = True

# Tox doesn't like that we specify py3==py37
ignore_basepython_conflict=True

[testenv]
# Most of these are defaults, but if you specify any you can't fall back
# defaults for the others.
basepython =
    py35: python3.5
    py36: python3.6
    py37: python3.7
    py38: python3.8
    pypy: pypy
    pypy3: pypy3
    py3: python3.7

passenv =
    TOXENV
    CI
    CI_*
    CIRCLECI
    CIRCLE_*
    TRAVIS
    TRAVIS_*
    APPVEYOR
    APPVEYOR_*
    DISPLAY
    XAUTHORITY
    USER
    USERNAME

usedevelop = True
setenv =
    QT_API = pyside2
# install_command = pip install -U {opts} {packages}
install_command = pip install -U  {packages}

deps =
     -r{toxinidir}/requirements.txt
     -r{toxinidir}/requirements_dev.txt
commands =
    python -V
    pytest -vvv -qq -o console_output_style=count -p no:sugar {posargs}

[testenv:cov]
basepython=python3.7
deps =
     -r{toxinidir}/requirements.txt
     -r{toxinidir}/requirements_dev.txt
commands =
    coverage run --source=jmbde,tests -m unittest discover -s tests/
    coverage html
    coverage report -m

[testenv:lint]
basepython=python3.7
install_command = pip install -U  {packages}
deps =
     -r{toxinidir}/requirements.txt
     -r{toxinidir}/requirements_dev.txt
commands =
    pre-commit run --all-files --show-diff-on-failure
    flake8 {posargs: jmbde tests }
    pycodestyle --config={toxinidir}/setup.cfg jmbde tests
    # pydocstyle --config={toxinidir}/setup.cfg jmbde tests
    rstcheck README.rst
    # mypy --config={toxinidir}/setup.cfg jmbde tests

# Documentation
[testenv:docs]
basepython=python3.7
changedir = docs/source
deps =
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/requirements_dev.txt
    -r{toxinidir}/docs/requirements.txt
commands =
    sphinx-build -b html -d {envtmpdir}/doctrees . {envtmpdir}/html
    sphinx-build -b man -d {envtmpdir}/doctrees . {envtmpdir}/html

# Release tooling
[testenv:build]
skip_install = true
deps =
    -r{toxinidir}/requirements.txt

commands =
    python setup.py -q setup_qt sdist bdist_wheel

[testenv:release]
skip_install = true
deps =
    {[testenv:build]deps}
commands =
    {[testenv:build]commands}
    twine check dist/*
