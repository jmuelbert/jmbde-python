name: Tests

on:
  pull_request:
    branches: [ main, master ]
  push:
    branches: [ main, master ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.github/*.md'
  workflow_dispatch:

:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: ${{ matrix.os }} / ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.9', '3.10', '3.11']
        exclude:
          - os: macos-latest
            python-version: '3.9'
          - os: windows-latest
            python-version: '3.9'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: 'pyproject.toml'

      - name: Install Hatch
        run: |
          python -m pip install --upgrade pip
          pip install hatch

      # Pre-commit cache for faster runs
      - name: Set up pre-commit cache
        uses: actions/cache@v3
        if: matrix.os != 'windows-latest'
        with:
          path: ~/.cache/pre-commit
          key: ${{ runner.os }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pre-commit-

      - name: Lint
        run: |
          hatch run lint:style
          hatch run lint:typing

      - name: Run tests
        run: |
          hatch run test:cov

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.xml
          fail_ci_if_error: true
          verbose: true

  security:
    name: Security Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Hatch
        run: |
          python -m pip install --upgrade pip
          pip install hatch

      - name: Run security checks
        run: |
          hatch run security:check
          hatch run security:audit

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Hatch
        run: |
          python -m pip install --upgrade pip
          pip install hatch

      - name: Build documentation
        run: |
          hatch run docs:build

      - name: Upload documentation artifact
        uses: actions/upload-artifact@v3
        with:
          name: documentation
          path: site/
          retention-days: 7

  notify:
    needs: [test, security, docs]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - uses: technote-space/workflow-conclusion-action@v3

      - name: Send Notification
        if: env.WORKFLOW_CONCLUSION != 'success'
        uses: rtCamp/action-discord-notify@v2
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          DISCORD_USERNAME: GitHub Actions
          DISCORD_AVATAR: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
          DISCORD_TITLE: "Tests Workflow Failed"
          DISCORD_COLOR: "#dc3545"
          DISCORD_MESSAGE: "Tests workflow failed on ${{ github.repository }}"