---
# SPDX-FileCopyrightText: Jürgen Mülbert
# SPDX-License-Identifier: EUPL-1.2

name: Test Suite

on:
  push:
    branches: [main, develop, 'release/**']
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.github/*.md'
      - 'LICENSE'

  pull_request:
    types: [opened, synchronize, reopened]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.github/*.md'

  workflow_dispatch:
    inputs:
      coverage-threshold:
        description: 'Minimum coverage threshold'
        required: false
        default: '80'
        type: string

permissions: read-all

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12']
        exclude:
          - os: macos-latest
            python-version: '3.9'
          - os: windows-latest
            python-version: '3.9'

    outputs:
      coverage: ${{ steps.coverage.outputs.percentage }}

    steps:
      - name: 🔒 Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit

      - name: 🧰 Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: ⚙️ Setup Python
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: 'pyproject.toml'
          check-latest: true

      - name: 📦 Setup Cache
        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a # v4.1.2
        with:
          path: |
            ~/.cache/pip
            ~/.cache/pre-commit
            ~/.cache/hatch
          key: ${{ runner.os }}-py${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-py${{ matrix.python-version }}-

      - name: 🛠️ Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install hatch
          hatch env create

      - name: 🔍 Run Linting
        run: |
          hatch run lint:style
          hatch run lint:typing

      - name: 🧪 Run Tests
        run: hatch run test:cov

      - name: 📊 Process Coverage
        id: coverage
        if: success()
        run: |
          COVERAGE=$(coverage report | grep TOTAL | awk '{print $4}' | sed 's/%//')
          echo "percentage=${COVERAGE}" >> $GITHUB_OUTPUT

          if [ "${COVERAGE}" -lt "${{ github.event.inputs.coverage-threshold || 80 }}" ]; then
            echo "::error::Coverage ${COVERAGE}% is below threshold of ${{ github.event.inputs.coverage-threshold || 80 }}%"
            exit 1
          fi

      - name: 📤 Upload Coverage
        if: always()
        uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d # v3.1.4
        with:
          files: ./coverage.xml
          flags: ${{ matrix.os }},python-${{ matrix.python-version }}
          fail_ci_if_error: true
          verbose: true

      - name: 📦 Upload Test Results
        if: always()
        uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b # v4.3.4
        with:
          name: test-results-${{ matrix.os }}-${{ matrix.python-version }}
          path: |
            .coverage
            coverage.xml
            test-reports/
          retention-days: 7

  security:
    name: Security Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: test

    permissions:
      security-events: write

    steps:
      - name: 🔒 Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit

      - name: 🧰 Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: ⚙️ Setup Python
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: 🛠️ Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install hatch

      - name: 🔍 Run Security Checks
        run: |
          hatch run security:check
          hatch run security:audit

  docs:
    name: Documentation Build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: test

    permissions:
      contents: read
      pages: write

    steps:
      - name: 🔒 Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit

      - name: 🧰 Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: ⚙️ Setup Python
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: 🛠️ Build Documentation
        run: |
          pip install hatch
          hatch run docs:build

      - name: 📤 Upload Documentation
        uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b # v4.3.4
        with:
          name: documentation
          path: site/
          retention-days: 7

  verify:
    name: Verify Suite
    if: always()
    needs: [test, security, docs]
    runs-on: ubuntu-latest

    steps:
      - name: 🔍 Check Status
        uses: re-actors/alls-green@223e4bb7a751b91f43eda76992bcfbf23b8b0302 # v1.2.2
        with:
          jobs: ${{ toJSON(needs) }}

      - name: 📊 Generate Report
        if: always()
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const summary = `## 📋 Test Suite Summary

            ### Test Results
            - Coverage: ${{ needs.test.outputs.coverage }}%
            - Security Checks: ${{ needs.security.result }}
            - Documentation: ${{ needs.docs.result }}

            ### Details
            - [Coverage Report](https://codecov.io/gh/${{ github.repository }})
            - [Test Artifacts](${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID})
            `;

            if (context.payload.pull_request) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                body: summary
              });
            }
