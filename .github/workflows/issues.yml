# SPDX-FileCopyrightText: J√ºrgen M√ºlbert <juergen.muelbert@web.de>
# SPDX-License-Identifier: EUPL-1.2

name: Issue Management

on:
  issues:
    types: [opened, edited, labeled, unlabeled, assigned]
  issue_comment:
    types: [created]
  workflow_dispatch:
    inputs:
      issue-number:
        description: 'Issue number to process'
        required: true
        type: number

permissions: read-all

concurrency:
  group: ${{ github.workflow }}-${{ github.event.issue.number || github.event.inputs.issue-number }}
  cancel-in-progress: true

jobs:
  process-issue:
    name: Process Issue
    if: github.actor != 'dependabot[bot]'
    runs-on: ubuntu-latest
    timeout-minutes: 5

    permissions:
      issues: write
      pull-requests: read

    outputs:
      labeled: ${{ steps.triage.outputs.labeled }}
      priority: ${{ steps.triage.outputs.priority }}

    steps:
      - name: üîí Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit

      - name: üè∑Ô∏è Initial Triage
        id: triage
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const issue = context.payload.issue;
            const issueNumber = issue?.number || context.inputs.issue-number;
            
            const templates = {
              welcome: `üëã Thanks for opening this issue! Our team will review it soon.
                
                Please make sure you have:
                - [ ] Checked our existing issues
                - [ ] Provided all necessary information
                - [ ] Added relevant labels
                
                Read our [Contributing Guidelines](../../CONTRIBUTING.md) for more information.`,
              
              reminder: `‚è∞ Friendly reminder:
                - Issues should be detailed and clear
                - Include steps to reproduce for bugs
                - Provide examples for feature requests
                - Follow our issue template`,
              
              needsInfo: `‚ÑπÔ∏è We need more information to process this issue:
                - Could you provide more details?
                - Can you share steps to reproduce?
                - What's your environment setup?`
            };
            
            // Auto-label based on content
            const labels = new Set();
            const title = issue.title.toLowerCase();
            const body = issue.body?.toLowerCase() || '';
            
            if (body.includes('error') || body.includes('bug') || body.includes('crash')) {
              labels.add('type: bug');
            }
            if (body.includes('feature') || body.includes('enhancement')) {
              labels.add('type: enhancement');
            }
            if (body.includes('documentation') || body.includes('docs')) {
              labels.add('type: documentation');
            }
            
            // Add priority label
            if (body.includes('urgent') || body.includes('critical')) {
              labels.add('priority: high');
            } else if (body.length < 100) {
              labels.add('needs-more-info');
            }
            
            // Apply labels
            if (labels.size > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
                labels: Array.from(labels)
              });
            }
            
            // Add welcome comment for new issues
            if (context.payload.action === 'opened') {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
                body: templates.welcome
              });
            }
            
            // Add needs-info comment if applicable
            if (labels.has('needs-more-info')) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
                body: templates.needsInfo
              });
            }
            
            core.setOutput('labeled', labels.size > 0);
            core.setOutput('priority', labels.has('priority: high'));

      - name: üìÖ Set Project
        if: steps.triage.outputs.labeled == 'true'
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            // Add to project board based on labels
            // Implement your project board logic here

      - name: üë• Assign Issue
        if: steps.triage.outputs.priority == 'true'
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            // Auto-assign high priority issues
            const assignees = ['jmuelbert']; // Add default assignees
            
            await github.rest.issues.addAssignees({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              assignees: assignees
            });

  stale-check:
    needs: process-issue
    runs-on: ubuntu-latest
    steps:
      - name: üîç Check Stale Issues
        uses: actions/stale@28ca1036281a5e5922ead5184a1bbf96e5fc984e # v9.0.0
        with:
          stale-issue-message: 'This issue has been automatically marked as stale due to inactivity.'
          close-issue-message: 'This issue was closed due to continued inactivity.'
          days-before-stale: 30
          days-before-close: 7
          exempt-issue-labels: 'priority: high,security,pinned'
          