# SPDX-FileCopyrightText: Time Lucas
# SPDX-License-Identifier: ISC

name: Release Management

on:
  push:
    branches: 
      - main
      - develop
      - 'release/**'
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.github/*.md'
      
  pull_request:
    types: [opened, reopened, synchronize, labeled, unlabeled]
    
  workflow_dispatch:
    inputs:
      release-type:
        description: 'Release type'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major
      draft:
        description: 'Create as draft'
        required: false
        type: boolean
        default: true

permissions: read-all

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  update-release:
    name: Update Release Draft
    runs-on: ubuntu-latest
    timeout-minutes: 10

    permissions:
      contents: write
      pull-requests: write
      discussions: write

    outputs:
      release-tag: ${{ steps.release-drafter.outputs.tag_name }}
      release-url: ${{ steps.release-drafter.outputs.html_url }}

    steps:
      - name: 🔒 Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit

      - name: 🧰 Checkout Repository
        uses: actions/checkout@v4 # Updated to the latest version
        with:
          fetch-depth: 0

      - name: 🏷️ Process Labels
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7 # Updated to the latest version
        with:
          script: |
            const pr = context.payload.pull_request;
            const title = pr.title.toLowerCase();
            const body = pr.body?.toLowerCase() || '';
            const labels = new Set();
            
            // Type labels
            if (title.startsWith('feat:')) labels.add('feature');
            if (title.startsWith('fix:')) labels.add('bug');
            if (title.startsWith('docs:')) labels.add('documentation');
            if (title.startsWith('chore:')) labels.add('maintenance');
            if (title.startsWith('perf:')) labels.add('performance');
            
            // Breaking changes
            if (body.includes('breaking change') || body.includes('breaking-change')) {
              labels.add('breaking');
            }
            
            // Size labels
            const changes = pr.additions + pr.deletions;
            if (changes > 500) labels.add('size/large');
            else if (changes > 100) labels.add('size/medium');
            else labels.add('size/small');
            
            if (labels.size > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                labels: Array.from(labels)
              });
            }

      - name: 📝 Update Release Draft
        id: release-drafter
        uses: release-drafter/release-drafter@6.0.0 # Updated to the latest version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          config-name: release-drafter.yml
          version-resolver: ${{ github.event.inputs.release-type || 'patch' }}
          draft: ${{ github.event.inputs.draft || 'true' }}

      - name: 📊 Update Release Notes
        if: success()
        uses: actions/github-script@v7 # Updated to the latest version
        with:
          script: |
            const releaseUrl = '${{ steps.release-drafter.outputs.html_url }}';
            const releaseTag = '${{ steps.release-drafter.outputs.tag_name }}';
            
            // Create or update release discussion
            const discussion = await github.rest.discussions.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Release ${releaseTag} Discussion`,
              body: `## Release ${releaseTag} Planning
              
              The next release is being drafted at [${releaseTag}](${releaseUrl})
              
              ### 📋 Checklist
              - [ ] All tests passing
              - [ ] Documentation updated
              - [ ] Change log reviewed
              - [ ] Security checks completed
              
              ### 🔄 Timeline
              - Draft started: ${new Date().toISOString()}
              - Target release date
