---
# SPDX-FileCopyrightText: Microsoft Corporation
# SPDX-License-Identifier: MIT

name: Security Static Analysis

on:
  push:
    branches: [main, develop, 'release/**']
    paths:
      - '**.py'
      - '**.pyi'
      - '**.pyx'
      - 'requirements*.txt'
      - 'pyproject.toml'
      - 'setup.py'
      - '.github/workflows/ossar-analysis.yml'

  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - '**.py'
      - '**.pyi'
      - '**.pyx'
      - 'requirements*.txt'
      - 'pyproject.toml'
      - 'setup.py'

  schedule:
    - cron: '0 4 * * 1' # Run at 04:00 UTC every Monday

  workflow_dispatch:
    inputs:
      full-scan:
        description: 'Perform full security scan'
        required: false
        type: boolean
        default: false

permissions: read-all

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  analyze:
    name: OSSAR Security Scan
    if: github.actor != 'dependabot[bot]'
    runs-on: windows-latest # Required for OSSAR
    timeout-minutes: 60

    permissions:
      security-events: write
      actions: read
      contents: read

    outputs:
      issues-found: ${{ steps.scan-results.outputs.issues-found }}
      critical-issues: ${{ steps.scan-results.outputs.critical-issues }}

    steps:
      - name: 🔒 Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit

      - name: 🧰 Checkout Repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: ⚙️ Setup .NET
        uses: actions/setup-dotnet@4d6c8fcf3c8f7a60068d26b594648e99df24cee3 # v4.0.0
        with:
          dotnet-version: '6.0.x'

      - name: 🛠️ Setup Python
        uses: actions/setup-python@0b93++645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version-file: '.standard-python-version'
          cache: 'pip'

      - name: 📦 Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install bandit safety

      - name: 🔍 Run OSSAR
        id: ossar
        uses: github/ossar-action@fae13e456b9973657a670eef6bccc3a4c2b5153d # main
        with:
          output: 'results'
          analyze-all-files: ${{ github.event.inputs.full-scan == 'true' }}

      - name: 🔬 Additional Security Checks
        run: |
          bandit -r . -f sarif -o bandit-results.sarif
          safety check --full-report --output json > safety-report.json

      - name: 📊 Process Results
        id: scan-results
        shell: pwsh
        run: |
          $ossarResults = Get-Content "${{ steps.ossar.outputs.sarifFile }}" | ConvertFrom-Json
          $banditResults = Get-Content "bandit-results.sarif" | ConvertFrom-Json
          $safetyResults = Get-Content "safety-report.json" | ConvertFrom-Json

          $totalIssues = 0
          $criticalIssues = 0

          # Process OSSAR results
          $totalIssues += $ossarResults.runs.results.Count
          $criticalIssues += ($ossarResults.runs.results | Where-Object { $_.level -eq 'error' }).Count

          # Process Bandit results
          $totalIssues += $banditResults.runs.results.Count
          $criticalIssues += ($banditResults.runs.results | Where-Object { $_.level -eq 'error' }).Count

          "issues-found=$totalIssues" >> $env:GITHUB_OUTPUT
          "critical-issues=$criticalIssues" >> $env:GITHUB_OUTPUT

          # Generate summary report
          $summary = @"
          ## 🔒 Security Scan Results

          ### Statistics
          - Total Issues: $totalIssues
          - Critical Issues: $criticalIssues

          ### Tool Results
          - OSSAR: $($ossarResults.runs.results.Count) issues
          - Bandit: $($banditResults.runs.results.Count) issues
          - Safety: $($safetyResults.vulnerabilities.Count) vulnerabilities

          ### Recommendations
          $(if ($criticalIssues -gt 0) {
            "⚠️ Critical security issues found! Immediate attention required."
          } else {
            "✅ No critical security issues found."
          })
          "@

          $summary | Out-File -FilePath security-summary.md

      - name: 📤 Upload SARIF Results
        uses: github/codeql-action/upload-sarif@b7cec7526559c32f1616476ff32d17ba4c59b2d6 # v3.25.5
        with:
          sarif_file: ${{ steps.ossar.outputs.sarifFile }}
          category: ossar-results

      - name: 📤 Upload Bandit Results
        uses: github/codeql-action/upload-sarif@b7cec7526559c32f1616476ff32d17ba4c59b2d6 # v3.25.5
        with:
          sarif_file: bandit-results.sarif
          category: bandit-results

      - name: 📦 Upload Artifacts
        if: always()
        uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b # v4.3.4
        with:
          name: security-scan-results
          path: |
            results/
            *.sarif
            *.json
            security-summary.md
          retention-days: 7

  notify:
    needs: analyze
    if: |
      always() &&
      needs.analyze.outputs.critical-issues > 0
    runs-on: ubuntu-latest
    steps:
      - name: 🚨 Security Alert
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const message = `## 🚨 Security Alert

            Critical security issues were found in the latest scan:
            - Total Issues: ${{ needs.analyze.outputs.issues-found }}
            - Critical Issues: ${{ needs.analyze.outputs.critical-issues }}

            Please review the [security scan results](${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID})`;

            // Create issue for critical security findings
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: '🚨 Critical Security Issues Detected',
              body: message,
              labels: ['security', 'critical', 'needs-triage']
            });
