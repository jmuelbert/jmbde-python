---
# SPDX-FileCopyrightText: Jürgen Mülbert <juergen.muelbert@web.de>
# SPDX-License-Identifier: EUPL-1.2

name: Release Pipeline

on: # yamllint disable-line rule:truthy
  push:
    branches: [main, develop, 'release/**']
    tags: [v*]
  workflow_dispatch:

permissions:
  contents: read
  
env:
  PACKAGE_NAME: jmbde-python
  PYTHON_VERSION_FILE: .python-version

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate:
    name: Validate Dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: 🔒 Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit

      - name: 🧰 Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          
      - name: 🔎 Dependency Review
        uses: actions/dependency-review-action@3b139cfc5fae8b618d3eae3675e383bb1769c019 # v4.5.0
        
  test-and-build:
    name: Test & Build
    needs: validate
    runs-on: ubuntu-latest
    timeout-minutes: 30
    outputs:
      version: ${{ steps.version.outputs.version }}

    steps:
      - name: 🔒 Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit

      - name: 🧰 Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: ⚙️ Setup Python
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version-file: ${{ env.PYTHON_VERSION_FILE }}
          cache: pip
          cache-dependency-path: '**/pyproject.toml'

      - name: 🔧 Install Build Tools
        run: |
          pip install -r .github/workflows/requirements.txt
          hatch --version

      - name: 📝 Get Version
        id: version
        run: |
          VERSION=$(hatch version)
          echo "version=${VERSION}" >> "$GITHUB_OUTPUT"
          echo "Version: ${VERSION}"

      - name: 🏗️ Build Package
        run: |
          hatch build
          echo "Built artifacts:"
          ls -la dist/

      - name: 🧪 Verify Package
        run: |
          hatch test
          hatch run security:check

      - name: 🔍 Check Distribution
        run: |
          # TODO: separate requirements pip install twine check-wheel-contents
          twine check dist/*
          check-wheel-contents dist/*.whl

      - name: 📝 Create GitHub Release
        id: release
        uses: softprops/action-gh-release@7b4da11513bf3f43f9999e90eabced41ab8bb048 # v2.2.0
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: false
          files: |
            dist/*
            LICENSE
            README.md
          generate_release_notes: true
          prerelease: false
          discussion_category_name: Releases
          body: |
            ## Release ${{ steps.version.outputs.version }}

            ### 📦 Assets
            - Python Package (PyPI): https://pypi.org/project/jmbde-python/${{ steps.version.outputs.version }}

            ### 📝 Release Notes
            See the automated release notes below for changes in this version.

            ### 🔍 Verification
            SHA256 Hashes for release assets are listed in the asset details.

            ### 📚 Documentation
            - Full documentation: https://jmbde-python.readthedocs.io/
            - Change log: https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md

      - name: 📋 Update Release Draft
        if: ${{ !steps.release.outputs.release_created }}
        uses: release-drafter/release-drafter@3f0f87098bd6b5c5b9a36d49c41d998ea58f9348 # v6.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 📢 Notify Success
        if: ${{ steps.release.outputs.release_created }}
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const version = '${{ steps.version.outputs.version }}';

            await github.rest.issues.createComment({
              ...context.repo,
              issue_number: context.issue.number,
              body: `✅ Successfully published version ${version} to PyPI.`
            });
