name: Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  release:
    name: Release
    permissions:
      contents: write
      id-token: write
    runs-on: ubuntu-latest      
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"
          
      - name: Install Hatch
        run: |
          python -m pip install --upgrade pip
          pip install hatch
          hatch --version
          
      - id: version
        name: Get Version
        run: |
          VERSION=$(hatch version)
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "Version: ${VERSION}"

          
      - name: Build package
        run: |
          hatch buil
         
      - name: Verify Package
        run: |
          hatch run test:test
          hatch run security:check
          
      # Only run on tags
      - if: startsWith(github.ref, 'refs/tags/v')
        name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.8.10
        with:
          password: ${{ secrets.PYPI_TOKEN }}
          print-hash: true
          verbose: true


          
     # Run on non-tag pushes to main/master
      - if: "!startsWith(github.ref, 'refs/tags/v')"
        name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@v1.8.10
        with:
          password: ${{ secrets.TEST_PYPI_TOKEN }}
          print-hash: true
          repository-url: https://test.pypi.org/legacy/
          verbose: true



      - env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: startsWith(github.ref, 'refs/tags/v')
        name: Create GitHub Release
        uses: softprops/action-gh-release@v1        
        with:
          draft: false
          files: dist/*
          generate_release_notes: true
          prerelease: false



      - env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}        
        if: "!startsWith(github.ref, 'refs/tags/v')"
        name: Update Release Draft
        uses: release-drafter/release-drafter@v5