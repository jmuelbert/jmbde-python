---
# SPDX-FileCopyrightText: Alex Page
# SPDX-License-Identifier: MIT

name: Issue Triage Automation

on:
  issues:
    types: [opened, reopened, labeled, unlabeled]
  workflow_dispatch:
    inputs:
      issue-number:
        description: 'Issue number to process'
        required: true
        type: number

permissions: read-all

concurrency:
  group: ${{ github.workflow }}-${{ github.event.issue.number || github.event.inputs.issue-number }}
  cancel-in-progress: true

jobs:
  triage:
    name: Process New Issue
    if: github.actor != 'dependabot[bot]'
    runs-on: ubuntu-latest
    timeout-minutes: 5

    permissions:
      issues: write
      project: write

    outputs:
      processed: ${{ steps.triage.outputs.processed }}
      priority: ${{ steps.triage.outputs.priority }}

    steps:
      - name: üîí Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit

      - name: üîÑ Move to Triage Column
        uses: alex-page/github-project-automation-plus@303f24a24c67ce7adf565a07e96720faf126fe36 # v0.8.3
        with:
          project: jmbde-python
          column: Triage
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: üè∑Ô∏è Initial Triage
        id: triage
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const issue = context.payload.issue;
            const labels = new Set();
            let priority = 'normal';
            
            // Analyze issue content
            const title = issue.title.toLowerCase();
            const body = issue.body?.toLowerCase() || '';
            
            // Type detection
            if (body.includes('bug') || body.includes('error') || body.includes('crash')) {
              labels.add('type: bug');
            } else if (body.includes('feature') || body.includes('enhancement')) {
              labels.add('type: enhancement');
            } else if (body.includes('documentation') || body.includes('docs')) {
              labels.add('type: documentation');
            }
            
            // Priority detection
            if (body.includes('urgent') || body.includes('critical') || body.includes('security')) {
              labels.add('priority: high');
              priority = 'high';
            } else if (body.includes('minor') || body.includes('trivial')) {
              labels.add('priority: low');
              priority = 'low';
            }
            
            // Size/complexity estimation
            const wordCount = body.split(/\s+/).length;
            if (wordCount > 500) {
              labels.add('size: large');
            } else if (wordCount < 100) {
              labels.add('size: small');
            }
            
            // Platform/environment labels
            if (body.includes('windows')) labels.add('platform: windows');
            if (body.includes('linux')) labels.add('platform: linux');
            if (body.includes('macos')) labels.add('platform: macos');
            
            // Add default labels
            labels.add('status: needs-triage');
            
            // Apply labels
            if (labels.size > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                labels: Array.from(labels)
              });
            }
            
            core.setOutput('processed', 'true');
            core.setOutput('priority', priority);

      - name: üìù Add Triage Comment
        if: steps.triage.outputs.processed == 'true'
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const priority = '${{ steps.triage.outputs.priority }}';
            const responses = {
              high: 'üö® This issue has been marked as high priority and will be reviewed soon.',
              normal: 'üëã Thank you for reporting this issue! Our team will review it shortly.',
              low: 'üìù Thank you for your contribution! We\'ll look into this when resources are available.'
            };
            
            const template = `${responses[priority]}
            
            ### Next Steps
            - Please ensure all requested information is provided
            - Watch this issue for updates
            - Feel free to add additional context if needed
            
            ### Useful Links
            - [Contributing Guidelines](../../CONTRIBUTING.md)
            - [Code of Conduct](../../CODE_OF_CONDUCT.md)
            - [Security Policy](../../SECURITY.md)
            
            _This is an automated message._`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.issue.number,
              body: template
            });

      - name: üìä Update Project
        if: steps.triage.outputs.priority == 'high'
        uses: alex-page/github-project-automation-plus@303f24a24c67ce7adf565a07e96720faf126fe36
        with:
          project: jmbde-python
          column: High Priority
          repo-token: ${{ secrets.GITHUB_TOKEN }}

  notify:
    needs: triage
    if: needs.triage.outputs.priority == 'high'
    runs-on: ubuntu-latest
    
    steps:
      - name: üîî Notify Team
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const message = `üö® High Priority Issue Detected
            
            Issue #${context.payload.issue.number} has been marked as high priority.
            Please review as soon as possible.
            
            ${context.payload.issue.html_url}`;
            
            // Add notification methods here (e.g., Discord, Slack, etc.)
            console.log(message);