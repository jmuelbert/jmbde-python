---
# SPDX-FileCopyrightText: GitHub, Inc. and contributors
# SPDX-License-Identifier: MIT

name: Documentation Deployment

on: # yamllint disable-line rule:truthy
  push:
    branches:
      - main
      - develop
      - release/**
      - resolve-**
    paths:
      - docs/**
      - mkdocs.yml
      - pyproject.toml
      - .github/workflows/mkdocs-pages.yml
      - '**/*.md'
      - src/**/*.py # Include Python files for API docs

  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - docs/**
      - mkdocs.yml
      - pyproject.toml
      - '**/*.md'
      - src/**/*.py

  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  docs:
    name: Build Documentation
    runs-on: ubuntu-latest
    timeout-minutes: 15

    permissions:
      contents: write
      pages: write
      id-token: write
      pull-requests: write

    outputs:
      deployment-url: ${{ steps.deploy.outputs.deployment-url }}

    steps:
      - name: 🔒 Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit

      - name: 🧰 Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: ⚙️ Setup Python
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version-file: .python-version
          cache: pip
          check-latest: true

      - name: 📦 Setup Cache
        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a # v4.1.2
        with:
          path: |
            .venv
            ~/.cache/pip
            ~/.cache/hatch
            ~/.cache/pre-commit
          key: ${{ runner.os }}-docs-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-docs-

      - name: 🛠️ Install Build Tools
        run: |
          python -m pip install --upgrade pip wheel
          pip install hatch uv

      - name: 🔧 Install Documentation Dependencies
        run: hatch env create docs

      - name: 🔍 Install Additional Tools
        run: |
          sudo apt-get update
          sudo apt-get install -y graphviz  # For documentation diagrams

      - name: 📚 Build Documentation
        id: build
        env:
          DOCS_LANGUAGE: en # Default language set here
        run: |
          if [ -d "src" ]; then
            hatch run docs:mkdocstrings-gen
          fi

          # Build documentation
          hatch run docs:build

          # Count generated files
          echo "doc-files=$(find site -type f -print | wc -l)" >> "$GITHUB_OUTPUT"

      - name: 🔍 Validate Links
        run: hatch run docs:validate-links || true # Don't fail on external links

      - name: 📦 Package Documentation
        if: success()
        run: |
          tar -czf docs.tar.gz site/
          echo "SIZE=$(stat -f%z docs.tar.gz)" >> "$GITHUB_ENV"
          echo "SHA=$(shasum -a 256 docs.tar.gz | cut -d' ' -f1)" >> "$GITHUB_ENV"

      - name: 🚀 Deploy to GitHub Pages
        if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
        id: deploy
        uses: peaceiris/actions-gh-pages@4f9cc6602d3f66b9c108549d475ec49e8ef4d45e # v4.0.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
          destination_dir: en # Default destination directory for language
          commit_message: |
            docs: update documentation (language: en)

            Files: ${{ steps.build.outputs.doc-files }}
          user_name: github-actions[bot]
          user_email: github-actions[bot]@users.noreply.github.com
          full_commit_message: true
          force_orphan: false
          enable_jekyll: false

      - name: 📤 Upload Artifacts
        if: always()
        uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b # v4.3.4
        with:
          name: documentation-en
          path: |
            site/
            docs.tar.gz
          retention-days: 7

      - name: 💬 Create PR Comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const summary = `## 📚 Documentation Build Report

            ### Statistics
            - Files: ${{ steps.build.outputs.doc-files }}
            - Size: ${{ env.SIZE }} bytes
            - SHA256: ${{ env.SHA }}

            ### Validation
            - ✅ Documentation built successfully
            - ✅ Links validated
            - ✅ API documentation generated

            ### Preview
            Download the artifacts to preview the documentation locally.

            ### Languages
            - 🇬🇧 English: ${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/tree/gh-pages/en
            - 🇩🇪 German: ${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/tree/gh-pages/de
            `;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: summary
            });

  verify:
    needs: docs
    if: always()
    runs-on: ubuntu-latest

    steps:
      - name: 🔍 Verify Deployment
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            if ('${{ needs.docs.result }}' !== 'success') {
              core.setFailed('Documentation deployment failed');
            }
