---
# SPDX-FileCopyrightText: J√ºrgen M√ºlbert
# SPDX-License-Identifier: MIT

name: Code Quality Checks

on: # yamlint disable-line rule:truthy
  push:
    branches:
      - main
      - develop
      - release/**
      - resolve-**
    paths:
      - '**.py'
      - '**.pyi'
      - '**.yml'
      - '**.yaml'
      - '**.json'
      - '**.md'
      - .pre-commit-config.yaml
      - pyproject.toml

  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - '**.py'
      - '**.pyi'
      - '**.yml'
      - '**.yaml'
      - '**.json'
      - '**.md'
      - .pre-commit-config.yaml
      - pyproject.toml

  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pre-commit:
    name: Code Quality
    runs-on: ubuntu-latest
    timeout-minutes: 15

    permissions:
      contents: write
      pull-requests: write

    outputs:
      files-changed: ${{ steps.check.outputs.files-changed }}
      fixes-applied: ${{ steps.check.outputs.fixes-applied }}

    steps:
      - name: üîí Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit

      - name: üß∞ Checkout Repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: ‚öôÔ∏è Setup Python
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version-file: .python-version
          cache: pip
          check-latest: true

      - name: üì¶ Setup Cache
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: |
            ~/.cache/pre-commit
            ~/.cache/pip
          key: ${{ runner.os }}-precommit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ runner.os }}-precommit-

      - name: üõ†Ô∏è Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit hatch pyside6
          pre-commit install-hooks

      - name: üîç Run Pre-commit Checks
        id: check
        run: |
          # Run pre-commit
          pre-commit run --all-files --show-diff-on-failure

          # Check for changes
          if [ -n "$(git status --porcelain)" ]; then
            echo "files-changed=true" >> "$GITHUB_OUTPUT"
            echo "Changes detected in the following files:" >> "$GITHUB_STEP_SUMMARY"
            git status --porcelain >> "$GITHUB_STEP_SUMMARY"
          else
            echo "files-changed=false" >> "$GITHUB_OUTPUT"
          fi

      - name: üìä Generate Report
        if: always()
        id: report
        run: |
          echo "## üîç Code Quality Check Results" > quality_report.md
          echo "" >> quality_report.md

          if [ -f ".pre-commit-output.txt" ]; then
            {
              echo "### Pre-commit Output"
              echo "\`\`\`"
              cat .pre-commit-output.txt
              echo "\`\`\`"
            } >> quality_report.md
          fi

          if [ "${{ steps.check.outputs.files-changed }}" == "true" ]; then
              {
                echo "### üìù Required Changes"
                echo "\`\`\`diff"
                git diff
                echo "\`\`\`"
              } >> quality_report.md
          fi

      - name: üîÑ Create Fix PR
        if: steps.check.outputs.files-changed == 'true'
        uses: peter-evans/create-pull-request@153407881ec5c347639a548ade7d8ad1d6740e38 # v5.0.2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'style: apply automatic code quality fixes'
          title: 'style: apply code quality fixes'
          body-path: quality_report.md
          branch: fix/code-quality
          delete-branch: true
          labels: |
            automated-pr
            code-quality
          draft: false

      - name: üí¨ Add PR Comment
        if: github.event_name == 'pull_request' && steps.check.outputs.files-changed == 'true'
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('quality_report.md', 'utf8');

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: report
            });

      - name: üì§ Upload Results
        if: always()
        uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b # v4.3.4
        with:
          name: code-quality-results
          path: |
            quality_report.md
            .pre-commit-output.txt
          retention-days: 7

  notify:
    needs: pre-commit
    if: |
      always() &&
      needs.pre-commit.outputs.files-changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: üì¢ Notify Team
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const message = `## üîç Code Quality Issues Found

            Code quality checks have identified issues that need attention.
            Please review the [workflow results](${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID})

            Changes have been proposed in a new PR.`;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: message
            });
