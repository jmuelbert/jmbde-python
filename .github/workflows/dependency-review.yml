---
# SPDX-License-Identifier: MIT
# GitHub Dependency Security Review Workflow
name: Dependency Security Review

on: # yamlint disable-line rule:truthy
  pull_request:
    types: [opened, reopened, synchronize]
    paths:
      - .github/workflows/requirements*.txt
      - pyproject.toml
      - .github/workflows/dependency-review.yml
      - .github/dependency-review-config.yml

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  dependency-review:
    name: Review Dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 15

    permissions:
      contents: read
      pull-requests: write
      security-events: write

    steps:
      # Step 1: Harden Runner for Security
      - name: üîí Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit

      # Step 2: Checkout Code
      - name: üß∞ Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
          fetch-depth: 0

      # Step 3: Dependency Review
      - name: üîç Review Dependencies
        id: reviewdeps
        uses: actions/dependency-review-action@3b139cfc5fae8b618d3eae3675e383bb1769c019 #v 4.5.0
        with:
          comment-summary-in-pr: always
          fail-on-severity: moderate
          deny-licenses: AGPL-1.0
          retry-on-snapshot-warnings: true
          base-ref: ${{ github.event.pull_request.base.ref }}
          head-ref: ${{ github.event.pull_request.head.ref }}
          config-file: .github/dependency-review-config.yml # Use external config if necessary

      # Step 4: Generate Dependency Report
      - name: üìä Generate Dependency Report
        if: always()
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const review = JSON.parse(process.env.REVIEW_RESULT || '{}');
            let report = '## üìã Dependency Review Summary\n\n';

            if (review.violations?.length > 0) {
              report += '### ‚ö†Ô∏è Violations Found\n\n';
              review.violations.forEach(v => {
                report += `- **${v.severity}**: ${v.message}\n`;
              });
            } else {
              report += '‚úÖ No dependency violations found\n';
            }

            if (review.licenses?.denied?.length > 0) {
              report += '\n### üö´ Denied Licenses\n\n';
              review.licenses.denied.forEach(l => {
                report += `- ${l.name} (${l.package})\n`;
              });
            }

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: report
            });
        env:
          REVIEW_RESULT: ${{ steps.reviewdeps.outputs.result }}

      # Step 5: Add Labels Based on Results
      - name: üè∑Ô∏è Add Labels
        if: always()
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const labels = [];
            const review = JSON.parse(process.env.REVIEW_RESULT || '{}');

            if (review.violations?.length > 0 || review.licenses?.denied?.length > 0) {
              labels.push('security-risk');
              if (review.licenses?.denied?.length > 0) {
                labels.push('license-issue');
              }
            } else {
              labels.push('dependency-check-passed');
            }

            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels
            });
        env:
          REVIEW_RESULT: ${{ steps.reviewdeps.outputs.result }}

  notify:
    needs: dependency-review
    if: always() && needs.dependency-review.result != 'skipped'
    runs-on: ubuntu-latest

    steps:
      - name: üîî Notify on Failure
        if: needs.dependency-review.result == 'failure'
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v 7.0.1
        with:
          script: |
            const message = `‚ùå Dependency review failed. Please check the [workflow logs](${context.payload.repository.html_url}/actions/runs/${context.runId}) for details.`;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: message
            });
