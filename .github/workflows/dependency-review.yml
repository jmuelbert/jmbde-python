# SPDX-FileCopyrightText: GitHub, Inc. and contributors
# SPDX-License-Identifier: MIT

name: Dependency Security Review

on:
  pull_request:
    types: [opened, reopened, synchronize]
    paths:
      - 'requirements*.txt'
      - 'pyproject.toml'
      - 'poetry.lock'
      - 'setup.py'
      - '.github/workflows/dependency-review.yml'

permissions: read-all

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  dependency-review:
    name: Review Dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 15

    permissions:
      contents: read
      pull-requests: write
      security-events: write

    steps:
      - name: 🔒 Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit

      - name: 🧰 Checkout Repository
        uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: 🔍 Review Dependencies
        id: review
        uses: actions/dependency-review-action@0c155c5e8556a497adf53f2c18edabf945ed8e70 # v4.3.2
        with:
          comment-summary-in-pr: always
          fail-on-severity: moderate
          deny-licenses: |
            GPL-1.0-or-later
            LGPL-2.0-or-later
            AGPL-1.0
            AGPL-3.0
          retry-on-snapshot-warnings: true
          base-ref: ${{ github.event.pull_request.base.ref }}
          head-ref: ${{ github.event.pull_request.head.ref }}
          config-file: .github/dependency-review-config.yml

      - name: 📊 Generate Dependency Report
        if: always()
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const review = ${{ steps.review.outputs.result }};
            
            let report = '## 📋 Dependency Review Summary\n\n';
            
            if (review.violations.length > 0) {
              report += '### ⚠️ Violations Found\n\n';
              review.violations.forEach(v => {
                report += `- **${v.severity}**: ${v.message}\n`;
              });
            } else {
              report += '✅ No dependency violations found\n';
            }
            
            if (review.licenses.denied.length > 0) {
              report += '\n### 🚫 Denied Licenses\n\n';
              review.licenses.denied.forEach(l => {
                report += `- ${l.name} (${l.package})\n`;
              });
            }
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: report
            });

      - name: 🏷️ Add Labels
        if: always()
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const labels = [];
            
            if ('${{ steps.review.outcome }}' === 'failure') {
              labels.push('security-risk');
              if (${{ steps.review.outputs.result }}.licenses.denied.length > 0) {
                labels.push('license-issue');
              }
            } else {
              labels.push('dependency-check-passed');
            }
            
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: labels
            });

      - name: 📤 Upload SARIF Report
        if: always()
        uses: github/codeql-action/upload-sarif@b7cec7526559c32f1616476ff32d17ba4c59b2d6 # v3.25.5
        with:
          sarif_file: dependency-review.sarif
          category: dependency-review

  notify:
    needs: dependency-review
    if: always() && needs.dependency-review.result != 'skipped'
    runs-on: ubuntu-latest
    
    steps:
      - name: 🔔 Notify on Failure
        if: needs.dependency-review.result == 'failure'
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const message = `❌ Dependency review failed. Please check the [workflow logs](${context.payload.repository.html_url}/actions/runs/${context.runId}) for details.`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: message
            });