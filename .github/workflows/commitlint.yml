---
# SPDX-FileCopyrightText: (c) Wagner Santos
#
# SPDX-License-Identifier: MIT
#
name: Lint Commit Messages

on: # yamllint disable-line rule:truthy
  pull_request:
    types: [opened, reopened, synchronize]
    paths-ignore:
      - '**.md'
      - docs/**
      - .github/*.md
      - LICENSE
      - LICENSES/**

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  commitlint:
    if: |
      github.actor != 'dependabot[bot]' &&
      !contains(github.event.head_commit.message, '[skip ci]')
    name: Lint Commit Messages
    runs-on: ubuntu-latest
    timeout-minutes: 5

    permissions:
      contents: read
      pull-requests: read
      issues: write

    steps:
      - name: üîí Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit

      - name: üß∞ Checkout Repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0 # Required for commitlint to access all commits

      - name: üîé Lint Commits
        uses: wagoid/commitlint-github-action@7f0a61df502599e1f1f50880aaa7ec1e2c0592f2 # v6.0.1
        with:
          # configFile: .github/linters/commitlint.config.js
          helpURL: https://github.com/conventional-changelog/commitlint/#what-is-commitlint
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: üìä Report Status
        if: always()
        env:
          JOB_STATUS: ${{ job.status }}
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            try {
              const conclusion = process.env.JOB_STATUS || '';
              if (!['success', 'failure', 'cancelled', 'skipped'].includes(conclusion)) {
                throw new Error(`Invalid job status provided: ${conclusion}`);
              }

              const message = {
                success: '‚úÖ All commit messages follow the conventional commits standard.',
                failure: '‚ùå Some commit messages do not follow the conventional commits standard.',
                cancelled: '‚ö†Ô∏è The workflow was cancelled.',
                skipped: '‚ö†Ô∏è The workflow was skipped.',
              }[conclusion];

              const pull_request = context.payload.pull_request;
              if (!pull_request) {
                throw new Error('This workflow must be triggered by a pull request event.');
              }

              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pull_request.number,
                body: message,
              });

              console.log('Comment added successfully.');
            } catch (error) {
              console.error('Failed to add a comment:', error.message);
              core.setFailed(error.message);
            }
