---
# SPDX-FileCopyrightText: GitHub, Inc. and contributors
# SPDX-License-Identifier: MIT

name: Dependabot Auto-Merge

on: # yamlint disable-line rule:truthy
  pull_request:
    types: [opened, synchronize, reopened, labeled]
  pull_request_review:
    types: [submitted]

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  dependabot:
    name: Process Dependabot PR
    if: |
      github.actor == 'dependabot[bot]' &&
      !contains(github.event.pull_request.labels.*.name, 'do-not-merge')
    runs-on: ubuntu-latest
    timeout-minutes: 10

    permissions:
      contents: read
      pull-requests: write
      issues: write
      repository-projects: write

    outputs:
      dependency-names: ${{ steps.metadata.outputs.dependency-names }}
      update-type: ${{ steps.metadata.outputs.update-type }}
      merged: ${{ steps.merge.outputs.merged }}

    steps:
      - name: üîí Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit

      - name: üìä Fetch Dependabot Metadata
        id: metadata
        uses: dependabot/fetch-metadata@5e5f99653a5b510e8555840e80cbf1514ad4af38 # v2.1.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: üè∑Ô∏è Add Labels
        id: labels
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        env:
          DEPENDENCY_TYPE: ${{ steps.metadata.outputs.dependency-type }}
          UPDATE_TYPE: ${{ steps.metadata.outputs.update-type }}
          ALERT_STATE: ${{ steps.metadata.outputs.alert-state }}
        with:
          script: |
            try {
              const dependencyType = process.env.DEPENDENCY_TYPE; // Pass as an environment variable
              const updateType = process.env.UPDATE_TYPE; // Pass as an environment variable
              const alertState = process.env.ALERT_STATE; // Pass as an environment variable

              const labels = [];

              // Add dependency type label
              if (dependencyType === 'direct:production') {
                labels.push('production-dependency');
              } else {
                labels.push('development-dependency');
              }

              // Add update type label
              if (updateType.includes('version-update:semver-patch')) {
                labels.push('patch-update');
              } else if (updateType.includes('version-update:semver-minor')) {
                labels.push('minor-update');
              } else if (updateType.includes('version-update:semver-major')) {
                labels.push('major-update');
              }

              // Add security label if needed
              if (alertState === 'fixed') {
                labels.push('security');
              }

              // Ensure pull_request exists in the context payload
              const pullRequest = context.payload.pull_request;
              if (!pullRequest) {
                throw new Error('This workflow must be triggered by a pull request event.');
              }

              // Add labels to PR
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pullRequest.number,
                labels: labels
              });

              console.log('Labels added successfully:', labels);
            } catch (error) {
              console.error('Failed to add labels:', error.message);
              core.setFailed(error.message);
            }


      - name: ‚úÖ Auto-approve PR
        id: approve
        if: |
          steps.metadata.outputs.update-type == 'version-update:semver-patch' ||
          contains(steps.metadata.outputs.dependency-names, 'test-dependencies')
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            await github.rest.pulls.createReview({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
              event: 'APPROVE',
              body: '‚úÖ Automatically approved based on dependency type and update scope'
            });

      - name: üîÑ Enable Auto-merge
        id: merge
        if: |
          steps.approve.outcome == 'success' &&
          !contains(steps.metadata.outputs.dependency-names, 'blocked-deps')
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            try {
              await github.rest.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number,
                merge_method: 'squash',
                commit_title: `chore(deps): ${context.payload.pull_request.title}`,
                commit_message: 'Auto-merged by Dependabot ü§ñ'
              });
              core.setOutput('merged', 'true');
            } catch (error) {
              console.log(`Failed to merge: ${error.message}`);
              core.setOutput('merged', 'false');
            }

      - name: üìù Add Merge Comment
        if: steps.merge.outputs.merged == 'true'
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `‚úÖ Successfully auto-merged this PR!\n\nUpdated dependencies:\n${steps.metadata.outputs.dependency-names}`
            });

  notify:
    needs: dependabot
    if: always() && needs.dependabot.result != 'skipped'
    runs-on: ubuntu-latest

    steps:
      - name: üîî Notify on Failure
        if: needs.dependabot.result == 'failure'
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: '‚ùå Auto-merge workflow failed. Please check the workflow logs.'
            });
